stages:
  - test
  - debug_build
  - release_build
  - deploy

.with-flutter:
  before_script:
  - flutter packages get
  - flutter clean

flutter_test:
  extends:
    - .with-flutter
  image: cirrusci/flutter:stable
  stage: test
  tags: [docker]
  script:
    - flutter test

flutter_build_android:
  extends:
    - .with-flutter
  image: cirrusci/flutter:stable
  stage: debug_build
  tags: [docker]
  script:
     - flutter build appbundle --debug
  artifacts:
    paths:
      - build/app/outputs/bundle/debug/app-debug.aab

flutter_build_macos:
  extends:
    - .with-flutter
  stage: debug_build
  tags: [mac-os]
  script:
     - flutter build macos --debug
     - cd installers/dmg_creation
     - appdmg debug_config.json ./synopce.dmg
  artifacts:
    paths:
      - installers/dmg_creation/synopce.dmg

.android-sign-setup:
  before_script:
    - echo $ANDROID_KEYSTORE > android/my.jks
    - echo "storePassword=$ANDROID_KEYSTORE_PASSWORD" >> android/signing.properties
    - echo "keyPassword=$ANDROID_KEY_PASSWORD" >> android/signing.properties
    - echo "keyAlias=$ANDROID_KEYSTORE_ALIAS" >> android/signing.properties
    - echo "storeFile=my.jks" > android/signing.properties

## TODO Try to move it to templates

release_build_android:
  extends:
    - .with-flutter
    - .android-sign-setup
  image: cirrusci/flutter:stable
  stage: release_build
  tags: [docker]
  script:
     - flutter build appbundle --release
  artifacts:
    paths:
      - build/app/outputs/bundle/release/app-release.aab
  only:
    - master
  when: manual

release_build_macos:
  extends:
    - .with-flutter
  stage: release_build
  tags: [mac-os]
  script:
     - flutter build macos --release
     - cd installers/dmg_creation
     - appdmg release_config.json ./release_synopce.dmg
  artifacts:
    paths:
      - installers/dmg_creation/release_synopce.dmg
  only:
    - master
  when: manual

.with-deploy:
  before_script:
    - npm install --location=global appcenter-cli
    - appcenter login --token $APPCENTER_API_TOKEN

deploy:
  extends:
    - .with-deploy
  image: node:16-alpine
  tags: [docker]
  stage: deploy
  dependencies:
    - release_build_android
    - release_build_macos
  script:
    - appcenter distribute release -f build/app/outputs/bundle/release/app-release.aab -g Collaborators --app Synopce/Synopce-android
    - appcenter distribute release -f installers/dmg_creation/release_synopce.dmg -g Collaborators --app Synopce/Synopce-mac-os
  only:
    - master
  when: manual