stages:
  - test
  - build
  - deploy

.with-flutter:
  before_script:
  - flutter packages get
  - flutter clean

flutter_test:
  extends:
    - .with-flutter
  image: cirrusci/flutter:stable
  stage: test
  tags: [docker]
  script:
    - flutter test

flutter_build_android:
  extends:
    - .with-flutter
  image: cirrusci/flutter:stable
  stage: build
  tags: [docker]
  script:
     - flutter build apk
  artifacts:
    paths:
      - build/app/outputs/flutter-apk/app-release.apk

flutter_build_macos:
  extends:
    - .with-flutter
  stage: build
  tags: [mac-os]
  script:
     - flutter build macos
     - cd installers/dmg_creation
     - appdmg config.json ./dsm_app.dmg
  artifacts:
    paths:
      - installers/dmg_creation/dsm_app.dmg

.with-deploy:
  before_script:
    - npm install --location=global appcenter-cli
    - appcenter login --token $APPCENTER_API_TOKEN

deploy:
  extends:
    - .with-deploy
  image: node:16-alpine
  tags: [docker]
  stage: deploy
  dependencies:
    - flutter_build_android
    - flutter_build_macos
  script:
    - appcenter distribute release -f build/app/outputs/flutter-apk/app-release.apk -g Collaborators --app Synopce/Synopce-android --build-number $CI_PIPELINE_ID
    - appcenter distribute release -f installers/dmg_creation/dsm_app.dmg -g Collaborators --app Synopce/Synopce-mac-os --build-version $(grep 'version:' pubspec.yaml | tail -n1 | awk '{ print $2}') --build-number $CI_PIPELINE_ID